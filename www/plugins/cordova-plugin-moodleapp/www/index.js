cordova.define("cordova-plugin-moodleapp.moodleapp", function(require, exports, module) { "use strict";(()=>{var c=class{constructor(){this.permissionStatus=i,this.permission=s,this.requestInProgress=!1}isLocationEnabled(){return new Promise((e,r)=>cordova.exec(e,r,"Diagnostic_Location","isLocationEnabled"))}switchToLocationSettings(){return cordova.platformId!=="android"?Promise.resolve():new Promise((e,r)=>cordova.exec(e,r,"Diagnostic_Location","switchToLocationSettings"))}switchToSettings(){return new Promise((e,r)=>cordova.exec(e,r,"Diagnostic","switchToSettings"))}getLocationAuthorizationStatus(){return new Promise((e,r)=>{if(cordova.platformId==="ios"){cordova.exec(e,r,"Diagnostic_Location","getLocationAuthorizationStatus");return}this.getPermissionsAuthorizationStatus([s.accessCoarseLocation,s.accessFineLocation,s.accessBackgroundLocation]).then(o=>{let t=o[s.accessCoarseLocation],n=o[s.accessFineLocation],l=typeof o[s.accessBackgroundLocation]<"u"?o[s.accessBackgroundLocation]:!0,a=i.notRequested;t===i.granted||n===i.granted?a=l===i.granted?i.granted:i.grantedWhenInUse:t===i.deniedOnce||n===i.deniedOnce?a=i.deniedOnce:(t===i.deniedAlways||n===i.deniedAlways)&&(a=i.deniedAlways),e(a)}).catch(r)})}requestLocationAuthorization(){return new Promise((e,r)=>cordova.exec(o=>e(this.convertPermissionStatus(o)),r,"Diagnostic_Location","requestLocationAuthorization",[!1,!0]))}requestMicrophoneAuthorization(){return new Promise((e,r)=>{if(cordova.platformId==="ios"){cordova.exec(o=>e(o?i.granted:i.deniedAlways),r,"Diagnostic_Microphone","requestMicrophoneAuthorization");return}this.requestRuntimePermission(s.recordAudio).then(e).catch(r)})}getPermissionsAuthorizationStatus(e){return new Promise((r,o)=>{if(cordova.platformId!=="android"){r({});return}cordova.exec(t=>{for(let n in t)t[n]=this.convertPermissionStatus(t[n]);r(t)},o,"Diagnostic","getPermissionsAuthorizationStatus",[e])})}requestRuntimePermission(e){return new Promise((r,o)=>{if(cordova.platformId!=="android"){r(i.granted);return}this.requestInProgress&&o("A runtime permissions request is already in progress"),this.requestInProgress=!0,cordova.exec(t=>{this.requestInProgress=!1,r(this.convertPermissionStatus(t[e]))},t=>{this.requestInProgress=!1,o(t)},"Diagnostic","requestRuntimePermission",[e])})}convertPermissionStatus(e){for(let r in g){let o=g[r],t=m[r];if(e===o&&t!==void 0)return t}return e}},s={acceptHandover:"ACCEPT_HANDOVER",accessBackgroundLocation:"ACCESS_BACKGROUND_LOCATION",accessCoarseLocation:"ACCESS_COARSE_LOCATION",accessFineLocation:"ACCESS_FINE_LOCATION",accessMediaLocation:"ACCESS_MEDIA_LOCATION",bodySensors:"BODY_SENSORS",bodySensorsBackground:"BODY_SENSORS_BACKGROUND",getAccounts:"GET_ACCOUNTS",readExternalStorage:"READ_EXTERNAL_STORAGE",readMediaAudio:"READ_MEDIA_AUDIO",readMediaImages:"READ_MEDIA_IMAGES",readMediaVideo:"READ_MEDIA_VIDEO",readPhoneState:"READ_PHONE_STATE",readSms:"READ_SMS",receiveMms:"RECEIVE_MMS",receiveSms:"RECEIVE_SMS",receiveWapPush:"RECEIVE_WAP_PUSH",recordAudio:"RECORD_AUDIO",sendSms:"SEND_SMS",useSip:"USE_SIP",uwbRanging:"UWB_RANGING",writeExternalStorage:"WRITE_EXTERNAL_STORAGE"},g={granted:"GRANTED",grantedWhenInUse:"authorized_when_in_use",deniedOnce:"DENIED_ONCE",deniedAlways:"DENIED_ALWAYS",notRequested:"NOT_REQUESTED"},m={notRequested:"not_determined",deniedAlways:"denied_always",restricted:"restricted",granted:"authorized",grantedWhenInUse:"authorized_when_in_use",ephimeral:"ephemeral",provisional:"provisional",limited:"limited"},i={...g,...m};var d=class{async getReferrer(){return new Promise((e,r)=>{cordova.exec(e,r,"InstallReferrer","getReferrer",[])})}};var u=class{async get(e,r){return typeof e=="string"&&(e=[e]),new Promise((o,t)=>{cordova.exec(o,t,"SecureStorage","get",[e,r])})}async store(e,r){for(let o in e){let t=e[o];if(t==null)delete e[o];else if(typeof t!="string")throw new Error(`SecureStorage: Invalid value for ${o}. Expected string, received ${typeof t}`)}await new Promise((o,t)=>{cordova.exec(o,t,"SecureStorage","store",[e,r])})}async delete(e,r){typeof e=="string"&&(e=[e]),await new Promise((o,t)=>{cordova.exec(o,t,"SecureStorage","delete",[e,r])})}async deleteCollection(e){await new Promise((r,o)=>{cordova.exec(r,o,"SecureStorage","deleteCollection",[e])})}};var E={secureStorage:new u,installReferrer:new d,diagnostic:new c};module.exports=E;})();

});
